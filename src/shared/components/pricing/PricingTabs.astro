<div class='pricing__tabs-container' data-aos='zoom-in'>
  <div class='pricing__tabs'>
    <div class='pricing__tab pricing__tab--selected' data-tab='monthly'>Mensual</div>
    <div class='pricing__tab' data-tab='yearly' title='¡Ahorra hasta un 30%!'>Anual (-30%)</div>
    <div class='pricing__tabs-background'></div>
  </div>
</div>

<style>
  .pricing__tabs-container {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .pricing__tabs {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-wrap: wrap;
    gap: 1rem;
    padding: 1rem;
    margin: 0 1rem;
    width: fit-content;
    border-radius: 1rem;
    background-color: var(--white);
  }

  .pricing__tab {
    padding: 0.75rem 1rem;
    background-color: transparent;
    border-radius: 0.5rem;
    font-weight: bold;
    position: relative;
    z-index: 1;
    transition: 0.2s ease color;
    cursor: default;
  }

  .pricing__tab:hover:not(.pricing__tab--selected) {
    color: var(--shade-04);
  }

  .pricing__tabs-background {
    position: absolute;
    top: 0;
    left: 0;
    background-image: linear-gradient(to right, var(--primary), var(--secondary));
    border-radius: 0.5rem;
    transition:
      width 0.3s ease,
      transform 0.3s ease;
  }
</style>

<script>
  import { setTypeBilling } from '@/shared/components/pricing/pricingState'
  import { pricingByBilling } from '../../../web/data/pricing'

  const initBillingTabs = () => {
    const billingTabs = document.querySelectorAll('.pricing__tab')

    const changeBillingType = (target: HTMLElement) => {
      billingTabs.forEach((billingTab) => billingTab.classList.remove('pricing__tab--selected'))

      const background = document.querySelector('.pricing__tabs-background')
      if (target instanceof HTMLElement && background instanceof HTMLElement) {
        target.classList.add('pricing__tab--selected')

        // * Animate background of tab
        const [tabWidth, tabHeight] = [target.offsetWidth, target.offsetHeight]
        const [tabLeft, tabTop] = [target.offsetLeft, target.offsetTop]

        background.style.width = tabWidth + 'px'
        background.style.height = tabHeight + 'px'
        background.style.transform = `translate(${tabLeft}px, ${tabTop}px)`

        // * Modify Pricing Data
        const billingType = target?.dataset?.tab as 'monthly' | 'yearly'
        setTypeBilling(billingType)
        const pricing = pricingByBilling[billingType]
        const monthlyPricing = pricingByBilling['monthly']

        const pricingCards = document.querySelectorAll('.pricing__card')

        if (pricingCards) {
          pricingCards.forEach((card) => {
            card.classList.remove('pricing__card--monthly')
            card.classList.remove('pricing__card--yearly')
            card.classList.add(`pricing__card--${billingType}`)
          })
        }

        // * Bronze
        const bronzePrice = document.getElementById('price-bronze')
        const bronzeBilling = document.getElementById('price-bronze-billing')
        const bronzeBeforePrice = document.getElementById('price-bronze-before')

        const bronzeTablePrice = document.getElementById('price-table-bronze')
        const bronzeTableBilling = document.getElementById('price-table-bronze-billing')

        if (
          bronzePrice &&
          bronzeBeforePrice &&
          bronzeBilling &&
          bronzeTablePrice &&
          bronzeTableBilling
        ) {
          const price = pricing.bronze.price
          bronzePrice.innerText = `$${parseFloat(price.toFixed(2))}`
          bronzeBeforePrice.innerText = `$${monthlyPricing.bronze.price * 12}/año`

          bronzeBilling.innerText = billingType === 'yearly' ? '/año' : '/mes'

          bronzeTablePrice.innerText = `$${parseFloat(price.toFixed(2))}`
          bronzeTableBilling.innerText = billingType === 'yearly' ? '/año' : '/mes'
        }

        // * Silver
        const silverPrice = document.getElementById('price-silver')
        const silverBilling = document.getElementById('price-silver-billing')
        const silverBeforePrice = document.getElementById('price-silver-before')

        const silverTablePrice = document.getElementById('price-table-silver')
        const silverTableBilling = document.getElementById('price-table-silver-billing')

        if (
          silverPrice &&
          silverBeforePrice &&
          silverBilling &&
          silverTablePrice &&
          silverTableBilling
        ) {
          const price = pricing.silver.price
          silverPrice.innerText = `$${parseFloat(price.toFixed(2))}`
          silverBeforePrice.innerText = `$${monthlyPricing.silver.price * 12}/año`

          silverBilling.innerText = billingType === 'yearly' ? '/año' : '/mes'

          silverTablePrice.innerText = `$${parseFloat(price.toFixed(2))}`
          silverTableBilling.innerText = billingType === 'yearly' ? '/año' : '/mes'
        }

        // * Gold
        const goldPrice = document.getElementById('price-gold')
        const goldBilling = document.getElementById('price-gold-billing')
        const goldBeforePrice = document.getElementById('price-gold-before')

        const goldTablePrice = document.getElementById('price-table-gold')
        const goldTableBilling = document.getElementById('price-table-gold-billing')

        if (goldPrice && goldBeforePrice && goldBilling && goldTablePrice && goldTableBilling) {
          const price = pricing.gold.price
          goldPrice.innerText = `$${parseFloat(price.toFixed(2))}`
          goldBeforePrice.innerText = `$${monthlyPricing.gold.price * 12}/año`

          goldBilling.innerText = billingType === 'yearly' ? '/año' : '/mes'

          goldTablePrice.innerText = `$${parseFloat(price.toFixed(2))}`
          goldTableBilling.innerText = billingType === 'yearly' ? '/año' : '/mes'
        }
      }
    }

    billingTabs.forEach((tab) => {
      tab.addEventListener('click', (ev) => {
        changeBillingType(ev.target as HTMLElement)
      })
    })

    const selectedTab = document.querySelector('.pricing__tab--selected')
    if (selectedTab) {
      changeBillingType(selectedTab as HTMLElement)
    }
  }

  initBillingTabs()
</script>
